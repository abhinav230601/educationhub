{"version":3,"sources":["shared/baseUrl.js","components/LoadingComponent.js","components/HomeComponent.js","components/ContactComponent.js","components/MenuComponent.js","components/DishdetailComponent.js","components/HeaderComponent.js","components/FooterComponent.js","components/AboutComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/forms.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["baseUrl","Loading","className","Home","props","required","val","length","maxLength","len","minLength","isNumber","isNaN","Number","validEmail","test","Contact","handleSubmit","bind","values","this","resetFeedbackForm","postFeedback","firstname","lastname","telnum","email","agree","contactType","message","to","active","role","href","model","onSubmit","htmlFor","md","text","id","name","placeholder","validators","show","messages","size","offset","check","checkbox","select","textarea","rows","type","color","Component","RenderMenuItem","dish","onClick","width","src","image","alt","Menu","dishes","map","key","isLoading","errMess","CommentForm","state","isModalOpen","isNavOpen","toggleModal","setState","postComment","dishId","rating","author","comment","outline","isOpen","toggle","checked","value","RenderDish","in","transformProps","exitTransform","description","RenderComments","comments","Intl","DateTimeFormat","year","month","day","format","Date","date","DishDetail","Header","toggleNav","handleLogin","event","alert","username","password","remember","preventDefault","Fragment","dark","expand","height","navbar","innerRef","input","Footer","About","RenderLeader","leader","left","object","body","heading","designation","RenderContent","leaders","list","leaderLoading","leaderErrMess","dishesLoading","dishesFailed","errmess","payload","addDishes","commentsFailed","addComments","dispatch","newComment","toISOString","fetch","method","JSON","stringify","headers","credentials","then","response","ok","error","Error","status","statusText","json","addComment","catch","console","log","promosLoading","promosFailed","addPromos","promos","leadersLoading","leadersFailed","addLeaders","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","location","classNames","timeout","path","component","filter","featured","dishErrMess","promotion","promotions","promo","promoLoading","promoErrMess","exact","match","parseInt","params","commentsErrMess","withRouter","connect","actions","reset","newFeedback","Dishes","action","Comments","concat","Promotions","Leaders","InitialFeedback","store","createStore","combineReducers","createForms","feedback","applyMiddleware","thunk","logger","App","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.51d67dc1.chunk.js","sourcesContent":["export const baseUrl = 'http://localhost:3001/';\r\n","import React from 'react';\r\n\r\nexport const Loading = () => {\r\n  return(\r\n    <div className=\"col-12\">\r\n        <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\r\n        <p>Loading . . .</p>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport { Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle } from 'reactstrap';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { Loading } from './LoadingComponent';\r\nimport { FadeTransform } from 'react-animation-components';\r\n\r\n\r\nfunction RenderCard({item, isLoading, errMess}){\r\n\r\n  if (isLoading) {\r\n      return(\r\n              <Loading />\r\n      );\r\n  }\r\n  else if (errMess) {\r\n      return(\r\n              <h4>{errMess}</h4>\r\n      );\r\n  }\r\n  else\r\n  return(\r\n    <FadeTransform in\r\n               transformProps={{\r\n                   exitTransform: 'scale(0.5) translateY(-50%)'\r\n               }}>\r\n      <Card>\r\n         <CardImg src={baseUrl + item.image} alt={item.name} />\r\n         <CardBody>\r\n            <CardTitle>{item.name}</CardTitle>\r\n            {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle>: null}\r\n            <CardText>{item.description}</CardText>\r\n         </CardBody>\r\n      </Card>\r\n  </FadeTransform>\r\n  );\r\n}\r\n\r\nfunction Home(props) {\r\n   return (\r\n     <div>Home</div>\r\n   );\r\n\r\n}\r\n\r\nexport default Home;\r\n","\r\n//jshint esversion:6\r\nimport React, { Component } from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Button, Label, Col, Row } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, Form, Errors, actions } from 'react-redux-form';\r\n\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\n\r\n\r\nclass Contact extends Component {\r\n\r\n        constructor(props) {\r\n          super(props);\r\n\r\n          this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n        }\r\n\r\n    handleSubmit(values){\r\n      this.props.resetFeedbackForm();\r\n     this.props.postFeedback(\r\n       values.firstname,\r\n       values.lastname,\r\n       values.telnum,\r\n       values.email,\r\n       values.agree,\r\n       values.contactType,\r\n       values.message\r\n     );\r\n    }\r\n\r\n  render()\r\n  {\r\n\r\n    return(\r\n        <div className=\"container\">\r\n              <div className=\"row\">\r\n                        <Breadcrumb>\r\n                        <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                        </Breadcrumb>\r\n                  <div className=\"col-12\">\r\n                       <h3> Contact Us </h3>\r\n                       <hr />\r\n                  </div>\r\n              </div>\r\n            <div className=\"row row-content\">\r\n\r\n                <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                    <div className=\"btn-group\" role=\"group\">\r\n                        <a role=\"button\" className=\"btn btn-primary\" href=\"tel:\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                        <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                        <a role=\"button\" className=\"btn btn-success\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                    <h3> Send us your feedback</h3>\r\n                </div>\r\n                <div className=\"col-12 col-md-9\">\r\n                      <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\r\n                          <Row className=\"form-group\">\r\n                              <Label htmlFor=\"firstname\" md={2}>First Name </Label>\r\n                              <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                     placeholder=\"First Name\"\r\n                                     className=\"form-control\"\r\n                                     validators={{\r\n                                       required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                     }}\r\n                                     />\r\n                                   <Errors\r\n                                     className=\"text-danger\"\r\n                                     model=\".firstname\"\r\n                                     show=\"touched\"\r\n                                     messages= {{\r\n                                       required: 'Required',\r\n                                       minLength: 'Must be Greater than 2 character',\r\n                                       maxLength: 'Must be Less than 15 character'\r\n                                     }}\r\n\r\n                                     />\r\n\r\n                              </Col>\r\n                          </Row>\r\n                          <Row className=\"form-group\">\r\n                              <Label htmlFor=\"lastname\" md={2}>Last Name </Label>\r\n                              <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                      className=\"form-control\"\r\n                                     placeholder=\"Last Name\"\r\n                                     validators={{\r\n                                       required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                     }} />\r\n                                     <Errors\r\n                                       className=\"text-danger\"\r\n                                       model=\".lastname\"\r\n                                       show=\"touched\"\r\n                                       messages= {{\r\n                                         required: 'Required',\r\n                                         minLength: 'Must be Greater than 2 character',\r\n                                         maxLength: 'Must be Less than 15 character'\r\n                                       }}\r\n\r\n                                       />\r\n                                  </Col>\r\n                          </Row>\r\n                          <Row className=\"form-group\">\r\n                              <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                              <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                      className=\"form-control\"\r\n                                     placeholder=\"Tel. Number\"\r\n                                     validators={{\r\n                                       required, minLength: minLength(3), maxLength: maxLength(15), isNumber\r\n                                     }} />\r\n                                     <Errors\r\n                                       className=\"text-danger\"\r\n                                       model=\".telnum\"\r\n                                       show=\"touched\"\r\n                                       messages= {{\r\n                                         required: 'Required',\r\n                                         minLength: 'Must be Greater than 2 numbers',\r\n                                         maxLength: 'Must be Less than 15 numbers',\r\n                                         isNumber: 'Must be a Number'\r\n                                       }}\r\n\r\n                                       />\r\n\r\n                              </Col>\r\n                          </Row>\r\n                          <Row className=\"form-group\">\r\n                              <Label htmlFor=\"email\" md={2}>Email Address</Label>\r\n                              <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                      className=\"form-control\"\r\n                                     placeholder=\"Email\"\r\n                                     validators={{\r\n                                       required, validEmail\r\n                                     }} />\r\n                                     <Errors\r\n                                       className=\"text-danger\"\r\n                                       model=\".email\"\r\n                                       show=\"touched\"\r\n                                       messages= {{\r\n                                         required: 'Required',\r\n                                        validEmail: 'Invalid Email Address'\r\n                                       }}\r\n\r\n                                       />\r\n\r\n                              </Col>\r\n                          </Row>\r\n\r\n                          <Row className=\"form-group\">\r\n                              <Col md={{size:6, offset:2}}>\r\n                                  <div className=\"form-check\">\r\n                                    <Label check>\r\n                                      <Control.checkbox model=\".agree\" name=\"agree\"\r\n                                        className=\"form-check-input\"\r\n                                     /> {' '}\r\n                                      <strong>May we contact you?</strong>\r\n                                    </Label>\r\n                                  </div>\r\n                              </Col>\r\n                              <Col md={{size:3, offset:1}}>\r\n                                <Control.select model=\".contactType\" name=\"contactType\"\r\n                              className=\"form-control\">\r\n                                <option>Tel.</option>\r\n                                <option>Email</option>\r\n                                </Control.select>\r\n                              </Col>\r\n                          </Row>\r\n                          <Row className=\"form-group\">\r\n                              <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                              <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                     rows=\"12\" className=\"form-control\" />\r\n                              </Col>\r\n                          </Row>\r\n                          <Row className=\"form-group\">\r\n                              <Col md={{size:10, offset:2}}>\r\n                                  <Button type=\"submit\" color=\"primary\">\r\n                                    Send Feedback\r\n                                  </Button>\r\n                              </Col>\r\n                          </Row>\r\n                      </Form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n  }\r\n\r\n}\r\n\r\nexport default Contact;\r\n","import React from 'react';\r\nimport { Card, CardImg, CardImgOverlay, CardText, CardBody, CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\n\r\n\r\nfunction RenderMenuItem({ dish, onClick }) {\r\n\r\n  return(\r\n    <Card>\r\n    <Link to={`/menu/${dish.id}`} >\r\n          <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\r\n          <CardImgOverlay>\r\n              <CardTitle>{dish.name}</CardTitle>\r\n          </CardImgOverlay>\r\n      </Link>\r\n    </Card>\r\n\r\n  );\r\n}\r\n\r\n// Another Way of writing functions\r\n\r\nconst Menu = (props) => {\r\n  const menu = props.dishes.dishes.map((dish) => {\r\n      return (\r\n        <div key={dish.id} className=\"col-12 col-md-5 m-1\">\r\n                  <RenderMenuItem dish={dish} />\r\n           </div>\r\n\r\n      );\r\n\r\n  });\r\n  if (props.dishes.isLoading) {\r\n           return(\r\n               <div className=\"container\">\r\n                   <div className=\"row\">\r\n                       <Loading />\r\n                   </div>\r\n               </div>\r\n           );\r\n       }\r\n       else if (props.dishes.errMess) {\r\n           return(\r\n               <div className=\"container\">\r\n                   <div className=\"row\">\r\n                       <div className=\"col-12\">\r\n                           <h4>{props.dishes.errMess}</h4>\r\n                       </div>\r\n                   </div>\r\n               </div>\r\n           );\r\n       }\r\n       else\r\n  return (\r\n    <div>Topics</div>\r\n  );\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default Menu;\r\n","//jshint esversion:6\r\nimport React, { Component } from 'react';\r\nimport { Card, CardImg, CardImgOverlay, CardText, CardBody, CardTitle, Breadcrumb, BreadcrumbItem, Modal, ModalHeader, ModalBody, Button, Row, Col, Label } from 'reactstrap';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\nconst required = val => val && val.length;\r\nconst maxLength = len => val => !(val) || val.length <= len;\r\nconst minLength = len => val => val && val.length >= len;\r\n\r\nclass CommentForm extends Component{\r\n  constructor(props) {\r\n    super(props);\r\n    this.state ={\r\n      isModalOpen: false,\r\n      isNavOpen: false\r\n    };\r\n    this.toggleModal = this.toggleModal.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n  toggleModal(){\r\n    this.setState({\r\n      isModalOpen: !this.state.isModalOpen\r\n    });\r\n  }\r\n  handleSubmit(values) {\r\n    this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);\r\n  }\r\n  render() {\r\n   return (\r\n     <div>\r\n       <Button outline onClick={this.toggleModal}>\r\n         <span className=\"fa fa-pencil\" /> Submit comment\r\n       </Button>\r\n       <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n         <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n         <ModalBody>\r\n           <LocalForm onSubmit={this.handleSubmit}>\r\n             <Row className=\"form-group\">\r\n               <Label htmlFor=\"rating\" md={12}>\r\n                 Rating\r\n               </Label>\r\n               <Col md={{ size: 12 }}>\r\n                 <Control.select\r\n                   model=\".rating\"\r\n                   name=\"rating\"\r\n                   className=\"form-control\"\r\n                 >\r\n                   <option>1</option>\r\n                   <option>2</option>\r\n                   <option>3</option>\r\n                   <option>4</option>\r\n                   <option checked>5</option>\r\n                 </Control.select>\r\n               </Col>\r\n             </Row>\r\n             <Row className=\"form-group\">\r\n               <Label htmlFor=\"author\" md={12}>\r\n                 Your Name\r\n               </Label>\r\n               <Col md={12}>\r\n                 <Control.text\r\n                   model=\".author\"\r\n                   id=\"author\"\r\n                   name=\"author\"\r\n                   placeholder=\"Your Name\"\r\n                   className=\"form-control\"\r\n                   validators={{\r\n                     required,\r\n                     minLength: minLength(3),\r\n                     maxLength: maxLength(15)\r\n                   }}\r\n                 />\r\n                 <Errors\r\n                   className=\"text-danger\"\r\n                   model=\".author\"\r\n                   show=\"touched\"\r\n                   messages={{\r\n                     required: \"Required\",\r\n                     minLength: \"Must be greater than 2 characters\",\r\n                     maxLength: \"Must be 15 characters or less\"\r\n                   }}\r\n                 />\r\n               </Col>\r\n             </Row>\r\n             <Row className=\"form-group\">\r\n               <Label htmlFor=\"comment\" md={12}>\r\n                 Comment\r\n               </Label>\r\n               <Col md={12}>\r\n                 <Control.textarea\r\n                   model=\".comment\"\r\n                   id=\"comment\"\r\n                   name=\"comment\"\r\n                   rows={5}\r\n                   className=\"form-control\"\r\n                 />\r\n               </Col>\r\n             </Row>\r\n             <Button type=\"submit\" value=\"submit\" color=\"primary\">\r\n               Submit\r\n             </Button>\r\n           </LocalForm>\r\n         </ModalBody>\r\n       </Modal>\r\n     </div>\r\n   );\r\n }\r\n}\r\n\r\n\r\nfunction RenderDish({dish}) {\r\n  if(dish != null){\r\n    return(\r\n      <div className='col-12 col-md-5 m-1'>\r\n        <FadeTransform\r\n               in\r\n               transformProps={{\r\n                   exitTransform: 'scale(0.5) translateY(-50%)'\r\n               }}>\r\n                    <Card>\r\n                        <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\r\n                        <CardBody>\r\n                            <CardTitle>{dish.name}</CardTitle>\r\n                            <CardText> { dish.description } </CardText>\r\n                        </CardBody>\r\n                    </Card>\r\n                  </FadeTransform>\r\n                </div>\r\n\r\n    )\r\n  }\r\n  else{\r\n    return(<div></div>)\r\n  }\r\n}\r\n\r\nfunction RenderComments({comments, postComment, dishId}) {\r\n  if (comments != null) {\r\n\r\n      return (\r\n         <div className=\"col-12 col-md-5 m-1\">\r\n             <h4>Comments</h4>\r\n             <ul className='list-unstyled'>\r\n                <Stagger in>\r\n                     {comments.map((comment) => {\r\n                         return(\r\n                           <Fade in>\r\n                             <li key={comment.id}>\r\n                             <p>{comment.comment}</p>\r\n                             <p>-- {comment.author},\r\n                             &nbsp;\r\n                             {new Intl.DateTimeFormat('en-US', {\r\n                                     year: 'numeric',\r\n                                     month: 'long',\r\n                                     day: '2-digit'\r\n                                 }).format(new Date(comment.date))}\r\n                             </p>\r\n                             </li>\r\n                             </Fade>\r\n                         );\r\n                     })}\r\n               </Stagger>\r\n             </ul>\r\n             <CommentForm dishId={dishId} postComment={postComment} />\r\n         </div>\r\n\r\n\r\n\r\n      );\r\n  }\r\n\r\n  else {\r\n    return(<div></div>);\r\n  }\r\n\r\n}\r\nconst DishDetail = (props) => {\r\n  if(props.isLoading) {\r\n    return(\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <Loading />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  else if (props.errMess) {\r\n    return(\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <h4>{props.errMess}</h4>\r\n      </div>\r\n    </div>\r\n  );\r\n  }\r\n  else if (props.dish != null) {\r\n        return (\r\n                  <div className = \"container\">\r\n                            <div className=\"row\">\r\n                                      <Breadcrumb>\r\n                                          <BreadcrumbItem><Link to='/menu'>Menu</Link></BreadcrumbItem>\r\n                                          <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                                      </Breadcrumb>\r\n                                <div className=\"col-12\">\r\n                                     <h3>{props.dish.name}</h3>\r\n                                     <hr />\r\n                                </div>\r\n                            </div>\r\n                           <div className='row'>\r\n                                <RenderDish dish={props.dish} />\r\n                                <RenderComments comments={props.comments}\r\n                                  postComment={props.postComment}\r\n                                  dishId={props.dish.id} />\r\n                           </div>\r\n                   </div>\r\n        )\r\n      }\r\n      else{\r\n        return(<div></div>)\r\n      }\r\n\r\n}\r\nexport default DishDetail;\r\n","import React, {Component} from 'react';\r\nimport { Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Jumbotron, Button, Modal, ModalHeader, ModalBody, Form, FormGroup, Input, Label } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\nclass Header extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n      isNavOpen: false,\r\n      isModalOpen: false\r\n    };\r\n    this.toggleNav= this.toggleNav.bind(this);\r\n    this.toggleModal = this.toggleModal.bind(this);\r\n    this.handleLogin = this.handleLogin.bind(this);\r\n\r\n  }\r\n\r\n  toggleNav() {\r\n    this.setState({\r\n      isNavOpen: !this.state.isNavOpen\r\n    });\r\n  }\r\n\r\n  toggleModal(){\r\n    this.setState({\r\n        isModalOpen: !this.state.isModalOpen\r\n    })\r\n\r\n  }\r\n\r\n  handleLogin(event) {\r\n    this.toggleModal();\r\n    alert(\"Username:\"+ this.username.value + \"Password:\"+ this.password.value + \"Remember: \" + this.remember.checked);\r\n    event.preventDefault();\r\n  }\r\n\r\nrender(){\r\n  return(\r\n    <React.Fragment>\r\n     <Navbar dark expand=\"md\">\r\n       <div className=\"container\">\r\n       <NavbarToggler onClick={this.toggleNav} />\r\n           <NavbarBrand className=\"mr-auto\" href=\"/\"><img src=\"assets/images/logo.png\" height=\"30\" width=\"41\"\r\n           alt=\"Education Hub\" />\r\n           </NavbarBrand>\r\n         <Collapse isOpen={this.state.isNavOpen} navbar>\r\n           <Nav navbar>\r\n           <NavItem>\r\n             <NavLink className=\"nav-link\" to=\"/home\">\r\n               <span className=\"fa fa-home fa-lg\"></span> Home\r\n             </NavLink>\r\n           </NavItem>\r\n           <NavItem>\r\n             <NavLink className=\"nav-link\" to=\"/aboutus\">\r\n               <span className=\"fa fa-info fa-lg\"></span> About Us\r\n             </NavLink>\r\n           </NavItem>\r\n           <NavItem>\r\n             <NavLink className=\"nav-link\" to=\"/menu\">\r\n               <span className=\"fa fa-list fa-lg\"></span> Topics\r\n             </NavLink>\r\n           </NavItem>\r\n           <NavItem>\r\n             <NavLink className=\"nav-link\" to=\"/contactus\">\r\n               <span className=\"fa fa-address-card fa-lg\"></span> Contact Us\r\n             </NavLink>\r\n           </NavItem>\r\n           </Nav>\r\n           <Nav className=\"ml-auto\" navbar>\r\n             <NavItem>\r\n               <Button outline onClick={this.toggleModal}>\r\n                 <span className=\"fa fa-sign-in fa-lg\">Login</span>\r\n               </Button>\r\n             </NavItem>\r\n           </Nav>\r\n        </Collapse>\r\n       </div>\r\n     </Navbar>\r\n     <Jumbotron>\r\n          <div className=\"container\">\r\n              <div className=\"row row-header\">\r\n                  <div className=\"col-12 col-sm-6\">\r\n                      <h1>Education Hub</h1>\r\n                      <p>A platform where on can learn from useful content of social media distraction free.</p>\r\n                  </div>\r\n              </div>\r\n          </div>\r\n      </Jumbotron>\r\n      <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n          <ModalHeader toggle={this.toggleModal}>\r\n            Login\r\n          </ModalHeader>\r\n          <ModalBody>\r\n            <Form onSubmit = {this.handleLogin}>\r\n                  <FormGroup>\r\n                        <Label htmlFor=\"username\">Username</Label>\r\n                        <Input type=\"text\" id=\"username\" name=\"username\"\r\n                        innerRef={(input) => this.username = input}  />\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                        <Label htmlFor=\"password\">Password</Label>\r\n                        <Input type=\"password\" id=\"password\" name=\"password\"\r\n                          innerRef={(input) => this.password = input} />\r\n                  </FormGroup>\r\n                  <FormGroup check>\r\n                       <Label check>\r\n                         <Input type=\"checkbox\" name=\"remember\"\r\n                           innerRef={(input) => this.remember = input} />\r\n                         Remember me\r\n                       </Label>\r\n                  </FormGroup>\r\n                  <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n            </Form>\r\n          </ModalBody>\r\n      </Modal>\r\n   </React.Fragment>\r\n\r\n  );\r\n}\r\n}\r\nexport default Header;\r\n","//jshint esversion:6\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Footer(props) {\r\n    return(\r\n    <div className=\"footer\">\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-center\">\r\n                <div className=\"col-4 offset-1 col-sm-2\">\r\n                    <h5>Links</h5>\r\n                    <ul className=\"list-unstyled\">\r\n                        <li><Link to=\"/home\">Home</Link></li>\r\n                        <li><Link to=\"/aboutus\">About</Link></li>\r\n                        <li><Link to=\"/menu\"> Topics</Link></li>\r\n                        <li><Link to=\"/contactus\"> Contact Us </Link></li>\r\n                    </ul>\r\n                </div>\r\n\r\n                <div className=\"col-12 col-sm-4 align-self-center\">\r\n                    <div className=\"text-center\">\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                        <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row justify-content-center\">\r\n                <div className=\"col-auto\">\r\n                    <p>© Copyright 2020 Education Hub</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport {\r\n  Breadcrumb,\r\n  BreadcrumbItem,\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  Media\r\n} from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { baseUrl } from \"../shared/baseUrl\";\r\nimport { Loading } from \"./LoadingComponent\";\r\nimport { Fade, Stagger } from \"react-animation-components\";\r\n\r\nfunction About(props) {\r\n  function RenderLeader({ leader }) {\r\n    return (\r\n      <Media className=\"mt-5\">\r\n        <Media left className=\"mr-5\">\r\n          <Media object src={baseUrl + leader.image} alt={leader.name} />\r\n        </Media>\r\n        <Media body>\r\n          <Media heading>{leader.name}</Media>\r\n          <p>{leader.designation}</p>\r\n          {leader.description}\r\n        </Media>\r\n      </Media>\r\n    );\r\n  }\r\n\r\n  function RenderContent({ leaders, isLoading, errMess }) {\r\n    if (isLoading) {\r\n      return <Loading />;\r\n    } else if (errMess) {\r\n      return <h4>{errMess}</h4>;\r\n    } else\r\n      return (\r\n        <Stagger in>\r\n          {props.leaders.map(leader => (\r\n            <Fade in key={leader.id}>\r\n              <RenderLeader key={leader.id} leader={leader} />\r\n            </Fade>\r\n          ))}\r\n        </Stagger>\r\n      );\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <Breadcrumb>\r\n          <BreadcrumbItem>\r\n            <Link to=\"/home\">Home</Link>\r\n          </BreadcrumbItem>\r\n          <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n        </Breadcrumb>\r\n        <div className=\"col-12\">\r\n          <h3>About Us</h3>\r\n          <hr />\r\n        </div>\r\n      </div>\r\n      <div className=\"row row-content\">\r\n        <div className=\"col-12 col-md-6\">\r\n          <h2>Why Us?</h2>\r\n          <p>\r\n            Social Media is the most used tool by youth and it's usage is keep on increasing. Many great content creaters are using social media to give\r\n            educational content to its audience, but due to other nuances on social media, the students are not able to pay atttention to a specific content.\r\n          </p>\r\n          <p>\r\n            We are just helping them to focus on the topic of their interest without any distractions.\r\n          </p>\r\n        </div>\r\n        <div className=\"col-12 col-md-5\">\r\n          <Card>\r\n            <CardHeader className=\"bg-primary text-white\">\r\n              Facts At a Glance\r\n            </CardHeader>\r\n            <CardBody>\r\n              <dl className=\"row p-1\">\r\n                <dt className=\"col-6\">Loren Epsum</dt>\r\n                <dd className=\"col-6\">Loren Epsum</dd>\r\n                <dt className=\"col-6\">Loren Epsum</dt>\r\n                <dd className=\"col-6\">Loren Epsum.</dd>\r\n                <dt className=\"col-6\">Loren Epsum</dt>\r\n                <dd className=\"col-6\">Loren Epsum</dd>\r\n                <dt className=\"col-6\">Loren Epsum</dt>\r\n                <dd className=\"col-6\">Loren Epsum</dd>\r\n              </dl>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n        <div className=\"col-12\">\r\n          <Card>\r\n            <CardBody className=\"bg-faded\">\r\n              <blockquote className=\"blockquote\">\r\n                <p className=\"mb-0\">\r\n                Social Media is the greatest tool one can use in 21th century.\r\n                </p>\r\n                <footer className=\"blockquote-footer\">\r\n                  Anonymous\r\n\r\n                </footer>\r\n              </blockquote>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n      <div className=\"row row-content\">\r\n        <div className=\"col-12\">\r\n          <h2>Our Team</h2>\r\n        </div>\r\n        <div className=\"col-12\">\r\n          <Media list>\r\n            <RenderContent\r\n              leaders={props.leader}\r\n              isLoading={props.leaderLoading}\r\n              errMess={props.leaderErrMess}\r\n            />\r\n          </Media>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default About;\r\n","//jshint esversion:6\r\nimport * as ActionTypes from './ActionTypes';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\n\r\n\r\nexport const addComment = (dishId, rating, author, comment) => ({\r\n    type: ActionTypes.ADD_COMMENT,\r\n    payload: {\r\n      dishId: dishId,\r\n      rating: rating,\r\n      author: author,\r\n      comment: comment\r\n    }\r\n});\r\n\r\n\r\nexport const fetchDishes = () => (dispatch) => {\r\n        dispatch(dishesLoading(true));\r\n\r\n        return fetch(baseUrl + 'dishes')\r\n      .then(response => {\r\n          if (response.ok) {\r\n            return response;\r\n          } else {\r\n            var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n          }\r\n        },\r\n        error => {\r\n              var errmess = new Error(error.message);\r\n              throw errmess;\r\n        })\r\n      .then(response => response.json())\r\n      .then(dishes => dispatch(addDishes(dishes)))\r\n      .catch(error => dispatch(dishesFailed(error.message)));\r\n\r\n\r\n};\r\n\r\nexport const dishesLoading = () => ({\r\n  type: ActionTypes.DISHES_LOADING\r\n});\r\n\r\nexport const dishesFailed = (errmess) => ({\r\n  type: ActionTypes.DISHES_FAILED,\r\n  payload: errmess\r\n});\r\n\r\nexport const addDishes = (dishes) => ({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload: dishes\r\n});\r\n\r\n\r\nexport const fetchComments = () => (dispatch) => {\r\n    return fetch(baseUrl + 'comments')\r\n    .then(response => {\r\n          if (response.ok) {\r\n            return response;\r\n          } else {\r\n            var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n          }\r\n        },\r\n        error => {\r\n              var errmess = new Error(error.message);\r\n              throw errmess;\r\n        })\r\n      .then(response => response.json())\r\n      .then(comments => dispatch(addComments(comments)))\r\n      .catch(error => dispatch(commentsFailed(error.message)));\r\n};\r\n\r\nexport const commentsFailed = (errmess) => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addComments = (comments) => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n});\r\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\r\n\r\n    const newComment = {\r\n        dishId: dishId,\r\n        rating: rating,\r\n        author: author,\r\n        comment: comment\r\n    };\r\n    newComment.date = new Date().toISOString();\r\n\r\n    return fetch(baseUrl + 'comments', {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newComment),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"same-origin\"\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            throw error;\r\n      })\r\n    .then(response => response.json())\r\n    .then(response => dispatch(addComment(response)))\r\n    .catch(error =>  { console.log('post comments', error.message); alert('Your comment could not be posted\\nError: '+error.message); });\r\n};\r\n\r\nexport const fetchPromos = () => (dispatch) => {\r\n\r\n    dispatch(promosLoading());\r\n    return fetch(baseUrl + 'promotions')\r\n       .then(response => {\r\n           if (response.ok) {\r\n             return response;\r\n           } else {\r\n             var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n             error.response = response;\r\n             throw error;\r\n           }\r\n         },\r\n         error => {\r\n               var errmess = new Error(error.message);\r\n               throw errmess;\r\n         })\r\n       .then(response => response.json())\r\n       .then(promos => dispatch(addPromos(promos)))\r\n       .catch(error => dispatch(promosFailed(error.message)));\r\n\r\n};\r\n\r\nexport const promosLoading = () => ({\r\n    type: ActionTypes.PROMOS_LOADING\r\n});\r\n\r\nexport const promosFailed = (errmess) => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos\r\n});\r\n\r\nexport const fetchLeaders = () => dispatch => {\r\n  dispatch(leadersLoading());\r\n\r\n  return fetch(baseUrl + \"leaders\")\r\n    .then(\r\n      response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error(\r\n            \"Error \" + response.status + \": \" + response.statusText\r\n          );\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n      }\r\n    )\r\n    .then(response => response.json())\r\n    .then(leaders => dispatch(addLeaders(leaders)))\r\n    .catch(error => dispatch(leadersFailed(error.message)));\r\n};\r\nexport const leadersLoading = () => ({\r\n  type: ActionTypes.LEADERS_LOADING\r\n});\r\n\r\nexport const leadersFailed = errmess => ({\r\n  type: ActionTypes.LEADERS_FAILED,\r\n  payload: errmess\r\n});\r\n\r\nexport const addLeaders = leaders => ({\r\n  type: ActionTypes.ADD_LEADERS,\r\n  payload: leaders\r\n});\r\n\r\nexport const postFeedback = (\r\n  firstname,\r\n  lastname,\r\n  telnum,\r\n  email,\r\n  agree,\r\n  contactType,\r\n  message\r\n) => dispatch => {\r\n  const newFeedback = {\r\n    firstname: firstname,\r\n    lastname: lastname,\r\n    telnum: telnum,\r\n    email: email,\r\n    agree: agree,\r\n    contactType: contactType,\r\n    message: message\r\n  };\r\n\r\n  return fetch(baseUrl + \"feedback\", {\r\n    method: \"POST\",\r\n    body: JSON.stringify(newFeedback),\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    },\r\n    credentials: \"same-origin\"\r\n  })\r\n    .then(\r\n      response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error(\r\n            \"Error \" + response.status + \": \" + response.statusText\r\n          );\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n        throw error;\r\n      }\r\n    )\r\n    .then(response => response.json())\r\n    .then(response =>\r\n      alert(\"Thank you for your feedback!\" + JSON.stringify(response))\r\n    )\r\n    .catch(error => {\r\n      console.log(\"post feedbacks\", error.message);\r\n      alert(\"Your feedback could not be posted\\nError: \" + error.message);\r\n    });\r\n};\r\n","//jshint esversion:6\r\nexport const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const DISHES_LOADING = 'DISHES_LOADING';\r\nexport const DISHES_FAILED = 'DISHES_FAILED';\r\nexport const ADD_DISHES = 'ADD_DISHES';\r\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\r\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\r\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\r\nexport const ADD_PROMOS = 'ADD_PROMOS';\r\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\r\nexport const LEADERS_LOADING = \"LEADERS_LOADING\";\r\nexport const ADD_LEADERS = \"ADD_LEADERS\";\r\nexport const LEADERS_FAILED = \"LEADERS_FAILED\";\r\n","//jshint esversion:6\r\nimport React, { Component} from 'react';\r\nimport Home from './HomeComponent';\r\nimport Contact from './ContactComponent';\r\nimport { Navbar, NavbarBrand } from 'reactstrap';\r\nimport Menu from './MenuComponent';\r\nimport DishDetail from './DishdetailComponent';\r\nimport Header from './HeaderComponent';\r\nimport Footer from './FooterComponent';\r\nimport AboutUs from \"./AboutComponent\";\r\nimport About from './AboutComponent';\r\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { postComment, fetchDishes, fetchComments, fetchPromos, postFeedback, fetchLeaders } from '../redux/ActionCreators';\r\nimport { actions } from 'react-redux-form';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    dishes: state.dishes,\r\n    comments: state.comments,\r\n    leaders: state.leaders,\r\n    promotions: state.promotions\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\r\n  fetchDishes: () => {\r\n     dispatch(fetchDishes())\r\n  },\r\n  resetFeedbackForm: () => { dispatch(actions.reset('feedback'))},\r\n  fetchComments: () => dispatch(fetchComments()),\r\n   fetchPromos: () => dispatch(fetchPromos()),\r\n   fetchLeaders: () => dispatch(fetchLeaders()),\r\n    postComment: (dishId, rating, author, comment) =>\r\n      dispatch(postComment(dishId, rating, author, comment)),\r\n      postFeedback: (\r\n      firstname,\r\n      lastname,\r\n      telnum,\r\n      email,\r\n      agree,\r\n      contactType,\r\n      message\r\n    ) =>\r\n      dispatch(\r\n        postFeedback(\r\n          firstname,\r\n          lastname,\r\n          telnum,\r\n          email,\r\n          agree,\r\n          contactType,\r\n          message\r\n        )\r\n      )\r\n});\r\n\r\nclass Main extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n  }\r\n\r\ncomponentDidMount(){\r\n  this.props.fetchDishes();\r\n  this.props.fetchComments();\r\n   this.props.fetchPromos();\r\n    this.props.fetchLeaders();\r\n}\r\n\r\nrender() {\r\n  const HomePage =() => {\r\n    return(\r\n      <Home\r\n          dish={this.props.dishes.dishes.filter(dish => dish.featured)[0]}\r\n          dishesLoading={this.props.dishes.isLoading}\r\n          dishErrMess={this.props.dishes.errMess}\r\n          promotion={\r\n            this.props.promotions.promotions.filter(promo => promo.featured)[0]\r\n          }\r\n          promoLoading={this.props.promotions.isLoading}\r\n          promoErrMess={this.props.promotions.errMess}\r\n          leader={\r\n            this.props.leaders.leaders.filter(leader => leader.featured)[0]\r\n          }\r\n          leaderLoading={this.props.leaders.isLoading}\r\n          leaderErrMess={this.props.leaders.errMess}\r\n        />\r\n\r\n    );\r\n  };\r\n\r\nconst DishWithId = ({match}) => {\r\n      return(\r\n        <DishDetail dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId,10))[0]}\r\n          isLoading={this.props.dishes.isLoading}\r\n          errMess={this.props.dishes.errMess}\r\n          comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId,10))}\r\n          commentsErrMess={this.props.comments.errMess}\r\n          addComment={this.props.addComment}\r\n          postComment={this.props.postComment}\r\n        />\r\n      );\r\n\r\n}\r\n\r\n  return (\r\n    <div>\r\n\r\n      <Header />\r\n      <TransitionGroup>\r\n        <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\r\n            <Switch location={this.props.location}>\r\n              <Route path=\"/home\" component={HomePage} />\r\n                <Route exact path=\"/aboutus\" component={() => (\r\n                     <AboutUs\r\n                       leaders={this.props.leaders.leaders}\r\n                       leaderLoading={this.props.leaders.isLoading}\r\n                       leaderErrMess={this.props.leaders.errMess}\r\n                     />\r\n                   )}\r\n                 />\r\n                 } />\r\n              <Route exact path=\"/menu\" component={() => <Menu dishes={this.props.dishes} />} />\r\n              <Route path=\"/menu/:dishId\" component={DishWithId} />\r\n              <Route exact path='/contactus'\r\n                component={() => <Contact resetFeedbackForm={this.props.resetFeedbackForm}\r\n                   postFeedback={this.props.postFeedback}/>} />\r\n              <Redirect to=\"/home\" />\r\n            </Switch>\r\n          </CSSTransition>\r\n      </TransitionGroup>\r\n\r\n\r\n       <Footer />\r\n    </div>\r\n  );\r\n}\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\r\n","//jshint esversion:6\r\nimport * as ActionType from './ActionTypes';\r\n\r\n\r\n\r\nexport const Dishes = (state = {\r\n  isLoading: true,\r\n  errMess: null,\r\n  dishes: []\r\n}, action) => {\r\n  switch(action.type) {\r\n    case ActionType.ADD_DISHES:\r\n    return {...state, isLoading:false, errMess: null, dishes: action.payload}\r\n\r\n\r\n    case ActionType.DISHES_LOADING:\r\n    return {...state, isLoading:true, errMess: null, dishes: []}\r\n\r\n    case ActionType.DISHES_FAILED:\r\n    return {...state, isLoading:false, errMess: action.payload, dishes: []}\r\n\r\n\r\n    default:\r\n        return state;\r\n  }\r\n}\r\n","//jshint esversion:6\r\nimport { COMMENTS } from '../shared/comments';\r\nimport * as ActionTypes from './ActionTypes';\r\n\r\n\r\nexport const Comments = (state = { errMess: null, comments:[]}, action) => {\r\n  switch (action.type) {\r\n    case ActionTypes.ADD_COMMENTS:\r\n      return {...state, errMess: null, comments: action.payload};\r\n\r\n    case ActionTypes.COMMENTS_FAILED:\r\n      return {...state, errMess: action.payload};\r\n\r\n    case ActionTypes.ADD_COMMENT:\r\n        var comment = action.payload;\r\n        return { ...state, comments: state.comments.concat(comment)};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { PROMOTIONS } from '../shared/promotions';\r\nimport * as ActionTypes from './ActionTypes';\r\n\r\n\r\nexport const Promotions = (state  = { isLoading: true,\r\n                                        errMess: null,\r\n                                        promotions:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_PROMOS:\r\n        return {...state, isLoading: false, errMess: null, promotions: action.payload};\r\n\r\n        case ActionTypes.PROMOS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, promotions: []}\r\n\r\n        case ActionTypes.PROMOS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n          return state;\r\n      }\r\n};\r\n","//jshint esversion:6\r\nimport * as ActionTypes from \"./ActionTypes\";\r\n\r\nexport const Leaders = (\r\n  state = {\r\n    isLoading: true,\r\n    errMess: null,\r\n    leaders: []\r\n  },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case ActionTypes.ADD_LEADERS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        errMess: null,\r\n        leaders: action.payload\r\n      };\r\n\r\n    case ActionTypes.LEADERS_LOADING:\r\n      return { ...state, isLoading: true, errMess: null, leaders: [] };\r\n\r\n    case ActionTypes.LEADERS_FAILED:\r\n      return { ...state, isLoading: false, errMess: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","//jshint esversion:6\r\n\r\nexport const InitialFeedback = {\r\n    firstname: '',\r\n    lastname: '',\r\n    telnum: '',\r\n    email: '',\r\n    agree: false,\r\n    contactType: 'Tel.',\r\n    message: ''\r\n};\r\n","//jshint esversion:6\nimport React, { Component} from 'react';\nimport { Navbar, NavbarBrand } from 'reactstrap';\nimport Main from './components/MainComponent';\nimport './App.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\n\nconst store = ConfigureStore();\n\n\nclass App extends Component {\n\n\nrender() {\n  return (\n    <Provider store={store}>\n\n        <BrowserRouter>\n                <div>\n                      <Main />\n                </div>\n         </BrowserRouter>\n     </Provider>\n  );\n}\n}\n\nexport default App;\n","//jshint esversion:9\r\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { createForms } from 'react-redux-form';\r\nimport { Dishes } from './dishes';\r\nimport { Comments } from './comments';\r\nimport { Promotions } from './promotions';\r\nimport { Leaders } from './leaders';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport { InitialFeedback } from './forms';\r\n\r\n\r\nexport const ConfigureStore = () => {\r\n  const store = createStore(\r\n  combineReducers({\r\n        dishes: Dishes,\r\n        comments: Comments,\r\n        promotions: Promotions,\r\n        leaders: Leaders,\r\n        ...createForms({\r\n               feedback: InitialFeedback\r\n           })\r\n  }),\r\n  applyMiddleware(thunk, logger)\r\n  );\r\n\r\n  return store;\r\n};\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}